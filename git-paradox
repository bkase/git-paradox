#!/bin/sh

no_changes () {
	git diff-index --quiet --cached HEAD --ignore-submodules -- &&
	git diff-files --quiet --ignore-submodules &&
	(test -z "$untracked" || test -z "$(untracked_files)")
}

list_files() {
    echo -n "     "
    git status | egrep '(modified:   |new file:   )' | cut -c12-
    echo
}

usage() {
    echo "usage: git paradox [options] commit"
    echo
}

make_msg() {
    # From http://stackoverflow.com/questions/1593051/how-to-programmatically-determine-the-current-checked-out-git-branch
    branch="$(git symbolic-ref HEAD 2>/dev/null)" ||
    branch="(unnamed branch)"     # detached HEAD

    branch=${branch##refs/heads/}

    echo "Time paradox: $short_commit.. is now at the tip" > $gitfolder/.paradox-msg
}

if test $# -eq 0
then
    usage
    exit 1
fi

if no_changes
then
    git rm -rq .
    
    commit=`git rev-parse $1`
    short_commit=`git rev-parse --short $1`

    git checkout -q $commit .
    
    gitfolder=`git rev-parse --git-dir`
    make_msg

    #if commit aborts, retrieve deleted files
    if ! git commit --file $gitfolder/.paradox-msg
    then
        git rm -rfq .
        git checkout -q HEAD .
    fi
    rm $gitfolder/.paradox-msg
    exit 0
fi

echo "error: Your local changes to the following files would be overwritten by the time paradox:"

list_files

echo "Please, commit your changes or stash them before you initiate a time paradox" 
echo "Aborting"

exit 1  
